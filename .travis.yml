language: node_js
node_js:
  - 12
cache: npm
services:
  - docker

env:
  global:
    - REGISTRY=45.119.146.88:5000
    - DOCKER_USERNAME=cocode
    # - DEPLOY_IP=
    # - DEPLOY_PASSWORD=

jobs:
  include:
    # - stage: Tests
    #   env:
    #     - SKIP_PREFLIGHT_CHECK=true
    #   name: Client Test
    #   script:
    #     - echo "client test"
    # - name: API Server Test
    #   script:
    #     - echo "server test"

    - stage: Deploy
      before_script:
        - 'sudo cat /etc/docker/daemon.json | jq ''. + {"insecure-registries": ["45.119.146.88:5000"]}'' | sudo tee /etc/docker/daemon.json'
      #   - sudo apt-get install sshpass
      script:
        - echo "deploy"
        - cd api-server
        - docker build -t "$REGISTRY"/cocode/api:1.0 .
        - docker images

        - docker push "$REGISTRY"/cocode/api:1.0
        # - sshpass -p "$DEPLOY_PASSWORD" ssh -o StrictHostKeyChecking=no root@"$DEPLOY_IP" "/root/practice-boilerplate-monorepo/$BRANCH/execute.sh"
    # - stage: Tests
    #   env:
    #     - SKIP_PREFLIGHT_CHECK=true
    #   name: Cocode Client Test
    #   before_install:
    #     - cd ./cocode
    #   install:
    #     - yarn install
    #   script:
    #     - yarn jest
    # - name: API Server Test
    #   before_install:
    #     - cd ./api-server
    #   install:
    #     - npm install
    #   script:
    #     - npm run test
    # - stage: Deploy
    #   name: Deploy Client
    #   before_script:
    #     - cd ./cocode
    #     - echo "$DOCKER_PASSWORD" | docker login -u "${DOCKER_USERNAME}" --password-stdin
    #   script:
    #     - docker build -t wltn3231/test-client:v3 .
    #     - docker push wltn3231/test-client:v3
    # - name: Deploy Server
    #   before_script:
    #     - cd ./api-server
    #     - echo "$DOCKER_PASSWORD" | docker login -u "${DOCKER_USERNAME}" --password-stdin
    #   script:
    #     - docker build -t wltn3231/test-server:v3 .
    #     - docker push wltn3231/test-server:v3
